import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.Queue;
import java.util.Stack;
import java.util.StringTokenizer;

public class Main{
	static ArrayList<Integer>[] graph;
	static boolean[] visited;
	static int[] parents;
	
    public static void main(String[] args) throws IOException{
    	
    	BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    	int n = Integer.parseInt(br.readLine());
    	graph = new ArrayList[n+1];

    	
    	for (int i = 1; i < n+1; i++) {
			graph[i] = new ArrayList<>();
		}
    	
    	
    	for (int i = 0; i < n-1; i++) {
    		StringTokenizer stn = new StringTokenizer(br.readLine());
    		int parent = Integer.parseInt(stn.nextToken());
    		int child = Integer.parseInt(stn.nextToken());
    		graph[parent].add(child);
    		graph[child].add(parent);
		}
    	
    	visited = new boolean[n+1]; 
    	parents = new int[n+1];		 
    	dfs(1);			 
    	
    	for(int i = 2; i < n+1; i++) {
    		System.out.println(parents[i]);
    	}
    }///

    
    public static void dfs(int v) {
    	visited[v] = true;
    	for(int i : graph[v]) {		
    		if (!visited[i]) {
    			parents[i] = v;
    			visited[i] = true;
    			dfs(i);
			}
    	}
    }///
    }/////
