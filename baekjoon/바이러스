import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.Queue;
import java.util.StringTokenizer;

public class Main {
	
	static int v,e;
	static boolean[] visited;
	static ArrayList<Integer>[] graph;
	static int ans;
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		v = Integer.parseInt(br.readLine());		// 정점 개수
		e = Integer.parseInt(br.readLine());		// 간선 개수
		
		graph = new ArrayList[v+1];
		for (int i = 1; i < v+1; i++) {
			graph[i] = new ArrayList();	 
		}
		
		for (int i = 0; i < e; i++) {
			StringTokenizer st = new StringTokenizer(br.readLine());
			int v1 = Integer.parseInt(st.nextToken());
			int v2 = Integer.parseInt(st.nextToken());
			
			graph[v1].add(v2);
			graph[v2].add(v1);	
		}
		
		visited = new boolean[v+1];
		dfs(1);
		System.out.println(ans);
		
	}///
	
	public static void dfs(int index) {
		visited[index] = true;
		
		for (int i = 1; i < v+1; i++) {
			for (int j = 0; j < graph[index].size(); j++) {
				int next = graph[index].get(j);
				if (!visited[next]) {
					ans++;
					dfs(next);
				}
			}
		}
		
	}///
	

 

}/////
