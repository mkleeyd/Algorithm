import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Arrays;
import java.util.Iterator;
import java.util.StringTokenizer;

public class Main {
	
	static long[][] dp;
	final static long MOD = 1000000000;
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		int n = Integer.parseInt(br.readLine());
	
		dp = new long[n+1][10];
		
		for (int i = 0; i < 10; i++) {
			dp[1][i] = 1;
		}
		
		for (int i = 1; i <= 9; i++) {
			dfs(n, i);
		}
		
		long ans = 0;
		for (int i = 1; i <= 9; i++) {
			ans += dp[n][i];
		}
		System.out.println(ans%MOD);
		
 	}///
	
	public static long dfs(int n , int i) {
		
		if (n == 1) {
			return 1;
		}
		
		if (dp[n][i] > 0) {
			return dp[n][i];
		}
		
		if (dp[n][i] == 0) {
			if (i == 0) {
				dp[n][i] = dfs(n-1, i+1);
			}
			else if (i == 9) {
				dp[n][i] = dfs(n-1, i-1);
			}
			else {
				dp[n][i] = dfs(n-1, i-1) + dfs(n-1, i+1);
			}
		}
		return dp[n][i]%MOD;
		
	}///
	
	

}/////
